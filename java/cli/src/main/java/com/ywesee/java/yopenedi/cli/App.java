/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.ywesee.java.yopenedi.cli;

import com.ywesee.java.yopenedi.converter.OpenTrans.Order;
import com.ywesee.java.yopenedi.converter.Converter;
import com.ywesee.java.yopenedi.converter.OpenTrans.Writer;
import com.ywesee.java.yopenedi.converter.Reader;
import org.apache.commons.cli.*;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.util.ArrayList;

public class App {
    public static void main(String[] args) throws Exception {
        Options options = new Options();

        Option outputOption = new Option("o", "out", true, "the folder to output");
        outputOption.setType(String.class);
        options.addOption(outputOption);

        Option inputOption = new Option("i", "in", true, "The path to input file - Stdin is used if this is not provided");
        outputOption.setType(String.class);
        options.addOption(inputOption);

        CommandLineParser parser = new DefaultParser();
        CommandLine cmd = parser.parse( options, args);
        if (!cmd.hasOption("out")) {
            HelpFormatter formatter = new HelpFormatter();
            formatter.printHelp( "openedi-exe", options );
            return;
        }

        String outPath = cmd.getOptionValue("out");
        File outDir = new File(outPath);
        if (!outDir.exists()) {
            outDir.mkdirs();
        }

        try {
            InputStream s;
            if (cmd.hasOption("in")) {
                s = new FileInputStream(cmd.getOptionValue("in"));
            } else {
                s = System.in;
            }
            Reader reader = new Reader();
            ArrayList<com.ywesee.java.yopenedi.converter.Order> ediOrders = reader.run(s);
            System.out.println("Detected " + ediOrders.size() + " orders");
            for (com.ywesee.java.yopenedi.converter.Order edi : ediOrders) {
                Order otOrder = Converter.orderToOpenTrans(edi);
                File targetFile = new File(outDir, otOrder.id + ".xml");
                System.out.println("Outputing order(id=" + otOrder.id + ") to " + targetFile.getAbsolutePath());
                Writer w = new Writer();
                FileOutputStream out = new FileOutputStream(targetFile);
                w.write(otOrder, out);
                out.close();
            }
            System.out.println("Done");
        } catch (Exception e) {
            System.out.println("Exception " + e.toString());
        }
    }
}
